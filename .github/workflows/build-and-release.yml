name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up C++ build tools on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Set up C++ build tools on macOS
        if: matrix.os == 'macos-latest'
        run: brew install cmake

      - name: Set up C++ build tools on Windows
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Configure CMake
        run: cmake -B build -S .

      - name: Build
        run: cmake --build build --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-build
          path: build/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Linux build
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-build
          path: ./binaries/linux/

      - name: Download macOS build
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-build
          path: ./binaries/macos/

      - name: Download Windows build
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-build
          path: ./binaries/windows/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Linux build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/linux/
          asset_name: linux_build
          asset_content_type: application/zip

      - name: Upload macOS build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/macos/
          asset_name: macos_build
          asset_content_type: application/zip

      - name: Upload Windows build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/windows/
          asset_name: windows_build
          asset_content_type: application/zip

